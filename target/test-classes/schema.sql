/*******************************************************************************************************************************************
                                                        CTR Database Design
********************************************************************************************************************************************/

CREATE TABLE CTR_PROD_ARTICLE (
    PROD_NBR                      VARCHAR(25),
    DIVISION_NBR                  VARCHAR(20),
    ARTICLE_NBR                   VARCHAR(20),
    ARTICLE_NAME                  VARCHAR(100),
    DIVISION_NAME                 VARCHAR(50),
    SCAN_DESC                     VARCHAR(30),
    WHSE_DESC                     VARCHAR(30),
    ONLINE_DESC                   VARCHAR(30),
    MASTER_DESC                   VARCHAR(30),
    UOM                           VARCHAR(10),
    UOM_CTGRY                     SMALLINT,
    UNIT_OF_MEASURE_CATEGORY_DESC VARCHAR(100),
    PACK_SIZE                     SMALLINT,
    PACK_SIZE_UOM                 VARCHAR(10),
    HEIGHT                        DECIMAL(9, 4),
    HEIGHT_UOM                    VARCHAR(10),
    WIDTH                         DECIMAL(9, 4),
    WIDTH_UOM                     VARCHAR(10),
    LENGTH                        DECIMAL(9, 4),
    LENGTH_UOM                    VARCHAR(10),
    VOLUME                        DECIMAL(9, 4),
    VOLUME_UOM                    VARCHAR(10),
    GROSS_WEIGHT                  DECIMAL(9, 4),
    GROSS_WEIGHT_UOM              VARCHAR(10),
    NET_WEIGHT                    DECIMAL(9, 4),
    NET_WEIGHT_UOM                VARCHAR(10),
    ALL_DEPT_CODE                 VARCHAR(30),
    ALL_DEPT_NAME                 VARCHAR(100),
    DEPT_CODE                     VARCHAR(30),
    DEPT_NAME                     VARCHAR(100),
    DEPT_MGR_ID                   VARCHAR(10),
    DEPT_MGR_NAME                 VARCHAR(50),
    CTGRY_CODE                    VARCHAR(30),
    CTGRY_NAME                    VARCHAR(100),
    CTGRY_MGR_ID                  VARCHAR(10),
    CTGRY_MGR_NAME                VARCHAR(50),
    SUBCAT_CODE                   VARCHAR(30),
    SUBCAT_NAME                   VARCHAR(100),
    SUBCAT_MGR_ID                 VARCHAR(10),
    SUBCAT_MGR_NAME               VARCHAR(50),
    SGMNT_CODE                    VARCHAR(30),
    SGMNT_NAME                    VARCHAR(100),
    SGMNT_MGR_ID                  VARCHAR(10),
    SGMNT_MGR_NAME                VARCHAR(50),
    BUYING_CTGRY_MGR_USERNAME     VARCHAR(20),
    BUYING_CTGRY_MGR_POSTN        VARCHAR(50),
    HEAD_OF_TRADE_USERNAME        VARCHAR(20),
    HEAD_OF_TRADE_POSTN           VARCHAR(50),
    GENERAL_MGR_USERNAME          VARCHAR(20),
    GENERAL_MGR_POSTN             VARCHAR(50),
    PRICE_FAMILY_CODE             VARCHAR(30),
    PRICE_FAMILY_NAME             VARCHAR(100),
    VENDOR_BRAND                  VARCHAR(100),
    BRAND_CODE                    INTEGER,
    BRAND_LABEL                   VARCHAR(30),
    BRAND_CODE_DESC               VARCHAR(100),
    ARTICLE_TYPE                  SMALLINT,
    ARTICLE_TYPE_DESC             VARCHAR(100),
    MASTER_SIZE                   INTEGER,
    MASTER_SIZE_UOM               VARCHAR(10),
    COMPARATIVE_SIZE_AU           INTEGER,
    COMPARATIVE_SIZE_AU_UOM       VARCHAR(10),
    COMPARATIVE_SIZE_NZ           INTEGER,
    COMPARATIVE_SIZE_NZ_UOM       VARCHAR(10),
    SRVNG_SIZE                    SMALLINT,
    SRVNG_SIZE_UOM                VARCHAR(10),
    NBR_OF_SERVES                 DECIMAL(7, 2),
    NUTRITIONAL_CLAIM             VARCHAR(100),
    MANDATORY_WARNING             VARCHAR(100),
    STORAGE_REQ                   VARCHAR(100),
    TOT_SHELFLIFE_IN_DAYS         SMALLINT,
    MIN_SHELFLIFE_IN_DAYS         SMALLINT,
    MRCDS_CTGRY_LVL_1_CODE        VARCHAR(30),
    MRCDS_CTGRY_LVL_1_NAME        VARCHAR(100),
    MRCDS_CTGRY_LVL_2_CODE        VARCHAR(30),
    MRCDS_CTGRY_LVL_2_NAME        VARCHAR(100),
    MRCDS_CTGRY_LVL_3_CODE        VARCHAR(30),
    MRCDS_CTGRY_LVL_3_NAME        VARCHAR(100),
    MRCDS_CTGRY_LVL_4_CODE        VARCHAR(30),
    MRCDS_CTGRY_LVL_4_NAME        VARCHAR(100),
    BASE_MRCDS_CTGRY_CODE         VARCHAR(30),
    BASE_MRCDS_CTGRY_NAME         VARCHAR(100),
    DEL_FLAG                      CHAR(1),
    DIM_LOAD_DATE                 DATE,
    PRIMARY KEY (PROD_NBR, DIVISION_NBR)
);


CREATE TABLE CTR_BASKET_SALES_SUMM (
    START_TXN_DATE                DATE,
    STORE_NBR                     VARCHAR(20),
    CHECKOUT_NBR                  INTEGER,
    START_TXN_TIME                TIME(0),
    TKT_NBR                       INTEGER,
    DIVISION_NBR                  VARCHAR(20),
    STORE_NAME                    VARCHAR(50),
    AREA_CODE                     VARCHAR(20),
    AREA_NAME                     VARCHAR(50),
    GROUPAREA_CODE                VARCHAR(20),
    GROUPAREA_NAME                VARCHAR(50),
    ZONE_CODE                     VARCHAR(20),
    ZONE_NAME                     VARCHAR(50),
    REGION_CODE                   VARCHAR(20),
    REGION_NAME                   VARCHAR(50),
    DIVISION_NAME                 VARCHAR(50),
    CMPNY_NBR                     VARCHAR(20),
    CMPNY_NAME                    VARCHAR(50),
    DISTRICT_CODE                 VARCHAR(20),
    DISTRICT_NAME                 VARCHAR(50),
    ADDR_STATE                    VARCHAR(20),
    ADDR_CNTRY                    VARCHAR(50),
    STORE_STATUS_CODE             SMALLINT,
    STORE_STATUS_DESC             VARCHAR(100),
    STORE_OPEN_DATE               DATE,
    STORE_CLOSE_DATE              DATE,
    SALES_CHNL_CODE               SMALLINT,
    SALES_CHNL_DESC               VARCHAR(100),
    LYLTY_CARD_NBR                VARCHAR(20),
    CARD_STATUS                   INTEGER,
    CRN                           VARCHAR(20),
    LYLTY_ACCT_TYPE               INTEGER,
    BASKET_KEY                    VARCHAR(42),
    BASKET_KEY_2                  VARCHAR(42),
    STAFF_DSCNT_FLAG              CHAR(1),
    RETURN_TKT_FLAG               CHAR(1),
    CASHIER_NBR                   INTEGER,
    UNIQUE_PROD_CNT               INTEGER,
    UNIQUE_OFFER_PROD_CNT         INTEGER,
    UNIQUE_MEASURED_PROD_CNT      INTEGER,
    UNIQUE_NON_MEASURED_PROD_CNT  INTEGER,
    TOT_PROD_QTY                  INTEGER,
    TOT_PROD_RETURN_QTY           INTEGER,
    TOT_PROD_SELL_QTY             INTEGER,
    TOT_OFFER_PROD_QTY            INTEGER,
    TOT_MEASURED_PROD_QTY         INTEGER,
    TOT_NON_MEASURED_PROD_QTY     INTEGER,
    TOT_RETAIL_INCLD_GST          DECIMAL(12, 2),
    TOT_RETAIL_EXCLD_GST          DECIMAL(12, 2),
    TOT_SALES_INCLD_GST           DECIMAL(12, 2),
    TOT_SALES_EXCLD_GST           DECIMAL(12, 2),
    TOT_REFUND_INCLD_GST          DECIMAL(12, 2),
    TOT_REFUND_EXCLD_GST          DECIMAL(12, 2),
    TOT_TAXABLE_AMT_INCLD_GST     DECIMAL(12, 2),
    TOT_GST                       DECIMAL(12, 2),
    TOT_ROUNDING                  DECIMAL(12, 2),
    TOT_DSCNT_INCLD_GST           DECIMAL(12, 2),
    TOT_OFFER_DSCNT_INCLD_GST     DECIMAL(12, 2),
    TOT_STAFF_DSCNT_INCLD_GST     DECIMAL(12, 2),
    TOT_STAFF_DSCNT_EXCLD_GST     DECIMAL(12, 2),
    TOT_PRICE_OVRD_DIFF_INCLD_GST DECIMAL(12, 2),
    TOT_UNKNOWN_DSCNT_INCLD_GST   DECIMAL(12, 2),
    END_TXN_DATE                  DATE,
    END_TXN_TIME                  TIME(0),
    LOAD_DATE                     DATE,
    TOT_NET_INCLD_GST             DECIMAL(14, 4),
    TOT_WOW_DOLLAR_INCLD_GST      DECIMAL(12, 2),
    TOT_WOW_DOLLAR_EXCLD_GST      DECIMAL(14, 4),
    TOT_GST_WOW_DOLLAR            DECIMAL(14, 4),
    TOT_NET_EXCLD_GST             DECIMAL(14, 4),
    TOT_SCAN_WIN_WOW_DOLLAR       DECIMAL(14, 4),
    LOAD_DATE_CACHE               DATETIME,
    PRIMARY KEY (BASKET_KEY, START_TXN_DATE)
);


CREATE TABLE CTR_SALES_REWARD_DETAIL (
    START_TXN_TIME      TIME(0),
    OFFER_NBR           INTEGER,
    STORE_NBR           VARCHAR(20),
    CHECKOUT_NBR        INTEGER,
    START_TXN_DATE      DATE,
    TKT_NBR             INTEGER,
    PROD_NBR            VARCHAR(25),
    TXN_SQNC_NBR        INTEGER,
    BASKET_KEY          VARCHAR(42),
    DIVISION_NBR        VARCHAR(20),
    STORE_NAME          VARCHAR(50),
    AREA_CODE           VARCHAR(20),
    AREA_NAME           VARCHAR(50),
    GROUPAREA_CODE      VARCHAR(50),
    GROUPAREA_NAME      VARCHAR(50),
    ZONE_CODE           VARCHAR(20),
    ZONE_NAME           VARCHAR(50),
    REGION_CODE         VARCHAR(20),
    REGION_NAME         VARCHAR(50),
    DIVISION_NAME       VARCHAR(50),
    CMPNY_NBR           VARCHAR(20),
    CMPNY_NAME          VARCHAR(50),
    DISTRICT_CODE       VARCHAR(20),
    DISTRICT_NAME       VARCHAR(50),
    ADDR_STATE          VARCHAR(20),
    ADDR_CNTRY          VARCHAR(50),
    STORE_STATUS_CODE   SMALLINT,
    STORE_STATUS_DESC   VARCHAR(100),
    STORE_OPEN_DATE     DATE,
    STORE_CLOSE_DATE    DATE,
    SALES_CHNL_CODE     SMALLINT,
    SALES_CHNL_DESC     VARCHAR(100),
    LYLTY_CARD_NBR      VARCHAR(20),
    LYLTY_ACCT_TYPE     SMALLINT,
    RETURN_FLAG         CHAR(1),
    OFFER_REDEEMED_FLAG CHAR(1),
    OFFER_TYPE          SMALLINT,
    ALTERNATE_OFFER_NBR INTEGER,
    REWARD_CTGRY        SMALLINT,
    REWARD_VAL          DECIMAL(12, 2),
    QTY                 INTEGER,
    UNIT_PRICE          DECIMAL(12, 2),
    DSCNT_TYPE          SMALLINT,
    APPORTIONMENT_TYPE  SMALLINT,
    REWARD_TYPE         SMALLINT,
    GRP_TYPE            SMALLINT,
    TXN_DATE            DATE,
    TXN_TIME            TIME(0),
    LOAD_DATE           DATE,
    OFFER_SUB_TYPE      INTEGER,
    AUDIENCE_TYPE       INTEGER,
    OFFER_CTGRY         INTEGER,
    PRIMARY KEY (BASKET_KEY, PROD_NBR, OFFER_NBR, START_TXN_DATE)
);


CREATE TABLE CTR_PROD_SALES_SUMM (
    START_TXN_DATE                DATE,
    STORE_NBR                     VARCHAR(20),
    PROD_NBR                      VARCHAR(25),
    CHECKOUT_NBR                  INTEGER,
    START_TXN_TIME                TIME(0),
    TKT_NBR                       INTEGER,
    DIVISION_NBR                  VARCHAR(20),
    STORE_NAME                    VARCHAR(50),
    AREA_CODE                     VARCHAR(20),
    AREA_NAME                     VARCHAR(50),
    ZONE_CODE                     VARCHAR(20),
    ZONE_NAME                     VARCHAR(50),
    REGION_CODE                   VARCHAR(20),
    REGION_NAME                   VARCHAR(50),
    DIVISION_NAME                 VARCHAR(50),
    CMPNY_NBR                     VARCHAR(20),
    CMPNY_NAME                    VARCHAR(50),
    DISTRICT_CODE                 VARCHAR(20),
    DISTRICT_NAME                 VARCHAR(50),
    ADDR_STATE                    VARCHAR(20),
    ADDR_CNTRY                    VARCHAR(50),
    STORE_STATUS_CODE             SMALLINT,
    STORE_STATUS_DESC             VARCHAR(100),
    STORE_OPEN_DATE               DATE,
    STORE_CLOSE_DATE              DATE,
    SALES_CHNL_CODE               SMALLINT,
    SALES_CHNL_DESC               VARCHAR(100),
    LYLTY_ACCT_TYPE               SMALLINT,
    LYLTY_CARD_NBR                VARCHAR(20),
    BASKET_KEY                    VARCHAR(42),
    STAFF_DSCNT_FLAG              CHAR(1),
    OFFER_DSCNT_FLAG              CHAR(1),
    PRICE_OVRD_FLAG               CHAR(1),
    MEASURED_ITEM_FLAG            CHAR(1),
    DEPT_SALES_FLAG               CHAR(1),
    STORE_DEPT_NBR                SMALLINT,
    BARCODE_NBR                   VARCHAR(20),
    ARTICLE_NBR                   VARCHAR(20),
    PACK_SIZE                     SMALLINT,
    PROD_UOM                      CHAR(5),
    BASE_UOM                      CHAR(5),
    BASE_UNIT_QTY                 INTEGER,
    PROD_QTY                      INTEGER,
    PROD_SELL_QTY                 INTEGER,
    PROD_RETURN_QTY               INTEGER,
    PROD_OFFER_QTY                INTEGER,
    PROD_CANCEL_QTY               INTEGER,
    TOT_MEASURED_QTY              DECIMAL(12, 4),
    TOT_AMT_INCLD_GST             DECIMAL(12, 2),
    TOT_AMT_EXCLD_GST             DECIMAL(12, 2),
    TOT_SCANNED_AMT_INCLD_GST     DECIMAL(12, 2),
    TOT_SCANNED_AMT_EXCLD_GST     DECIMAL(12, 2),
    TOT_REFUND_EXCLD_GST          DECIMAL(12, 2),
    TOT_REFUND_INCLD_GST          DECIMAL(12, 2),
    GST_PCT                       DECIMAL(4, 2),
    TOT_OFFER_DSCNT_INCLD_GST     DECIMAL(12, 2),
    TOT_STAFF_DSCNT_INCLD_GST     DECIMAL(12, 2),
    TOT_STAFF_DSCNT_EXCLD_GST     DECIMAL(12, 2),
    TOT_PRICE_OVRD_DIFF_INCLD_GST DECIMAL(12, 2),
    TOT_UNKNOWN_DSCNT_INCLD_GST   DECIMAL(12, 2),
    LOAD_DATE                     DATE,
    TOT_WOW_DOLLAR_INCLD_GST      DECIMAL(12, 2),
    TOT_WOW_DOLLAR_EXCLD_GST      DECIMAL(14, 4),
    TOT_NET_INCLD_GST             DECIMAL(14, 4),
    TOT_NET_EXCLD_GST             DECIMAL(14, 4),
    PRIMARY KEY (BASKET_KEY, PROD_NBR, START_TXN_DATE)
);


CREATE TABLE CTR_SALES_TENDER_SUMM (
    START_TXN_DATE             DATE,
    STORE_NBR                  VARCHAR(20),
    START_TXN_TIME             TIME(0),
    CHECKOUT_NBR               INTEGER,
    TKT_NBR                    INTEGER,
    DIVISION_NBR               VARCHAR(20),
    STORE_NAME                 VARCHAR(50),
    AREA_CODE                  VARCHAR(20),
    AREA_NAME                  VARCHAR(50),
    GROUPAREA_CODE             VARCHAR(20),
    GROUPAREA_NAME             VARCHAR(50),
    ZONE_CODE                  VARCHAR(20),
    ZONE_NAME                  VARCHAR(50),
    REGION_CODE                VARCHAR(20),
    REGION_NAME                VARCHAR(50),
    DIVISION_NAME              VARCHAR(50),
    CMPNY_NBR                  VARCHAR(20),
    CMPNY_NAME                 VARCHAR(50),
    DISTRICT_CODE              VARCHAR(20),
    DISTRICT_NAME              VARCHAR(50),
    ADDR_STATE                 VARCHAR(20),
    ADDR_CNTRY                 VARCHAR(50),
    STORE_STATUS_CODE          SMALLINT,
    STORE_STATUS_DESC          VARCHAR(100),
    STORE_OPEN_DATE            DATE,
    STORE_CLOSE_DATE           DATE,
    TENDER_FLAG                CHAR(1),
    CASH_OUT_FLAG              CHAR(1),
    PYMNT_FLAG                 CHAR(1),
    REFUND_FLAG                CHAR(1),
    ROUNDING_FLAG              CHAR(1),
    CHANGE_FLAG                CHAR(1),
    TOT_CASH_AMT               DECIMAL(12, 4),
    TOT_CHEQUE_AMT             DECIMAL(12, 4),
    TOT_EFTPOS_AMT             DECIMAL(12, 4),
    TOT_CHARGE_POST_TENDER_AMT DECIMAL(12, 4),
    TOT_CREDIT_CARD_AMT        DECIMAL(12, 4),
    TOT_FOREIGN_CRNCY_AMT      DECIMAL(12, 4),
    TOT_FOOD_STAMP_AMT         DECIMAL(12, 4),
    TOT_VENDOR_COUPON_AMT      DECIMAL(12, 4),
    TOT_STORE_COUPON_AMT       DECIMAL(12, 4),
    TOT_INHOUSE_CHARGE_AMT     DECIMAL(12, 4),
    TOT_DEBIT_CARD_AMT         DECIMAL(12, 4),
    TOT_WIC_AMT                DECIMAL(12, 4),
    TOT_BUY_AID_AMT            DECIMAL(12, 4),
    TOT_DSCNT_AMT              DECIMAL(12, 4),
    TOT_COUPON_AMT             DECIMAL(12, 4),
    TOT_GENERAL_TENDER_AMT     DECIMAL(12, 4),
    TOT_EBT_FOOD_STAMP_AMT     DECIMAL(12, 4),
    TOT_EBT_CASH_AMT           DECIMAL(12, 4),
    TOT_CUST_ACCT_PRCHS_AMT    DECIMAL(12, 4),
    TOT_CUST_ACCT_PYMNT_AMT    DECIMAL(12, 4),
    TOT_LYLTY_RDMP_AMT         DECIMAL(12, 4),
    TOT_FUEL_CARD_AMT          DECIMAL(12, 4),
    TOT_REFUND_AMT             DECIMAL(12, 4),
    TOT_CASH_OUT_AMT           DECIMAL(12, 4),
    TOT_PYMNT_AMT              DECIMAL(12, 4),
    TOT_ROUNDING_AMT           DECIMAL(12, 4),
    TOT_VOID_AMT               DECIMAL(12, 4),
    TOT_CHANGE_AMT             DECIMAL(12, 4),
    TOT_WOW_VCHR_AMT           DECIMAL(12, 4),
    BASKET_KEY                 VARCHAR(26),
    PRIMARY KEY (BASKET_KEY, START_TXN_DATE)
);


/*******************************************************************************************************************************************
                                                        Swtizerland Database Design
                                                                CTR Phase - 2
********************************************************************************************************************************************/

CREATE TABLE BM_BASKET (
    CRN            VARCHAR(20),
    BASKET_KEY     VARCHAR(42),
    START_TXN_DATE DATE           NOT NULL,
    DATE_PROCESSED DATE,
    TOT_WOW_DOLLAR DECIMAL(12, 2) NOT NULL,
    LMS_WOW_DOLLAR DECIMAL(12, 2) NOT NULL,
    STATUS         VARCHAR(20)    NOT NULL,
    REPROCESSED    BIT(1)         NOT NULL DEFAULT 0,
    SENT_TO_ET     BIT(1),
    PRIMARY KEY (BASKET_KEY, START_TXN_DATE)
);

CREATE TABLE BM_LINE_ITEM (
    CRN            VARCHAR(20),
    BASKET_KEY     VARCHAR(42),
    START_TXN_DATE DATE   NOT NULL,
    PROD_NBR       VARCHAR(25),
    DATE_PROCESSED DATE,
    COMP_PRICE     DECIMAL(9, 2),
    WOW_DOLLAR     DECIMAL(9, 2),
    REPROCESSED    BIT(1) NOT NULL DEFAULT 0,
    NETT_PRICE     DECIMAL(9, 2),
    PRIMARY KEY (BASKET_KEY, PROD_NBR, START_TXN_DATE)
);

CREATE TABLE BM_BASKET_TRANSACTION_LOG (
    CRN                VARCHAR(20),
    BASKET_KEY         VARCHAR(42),
    START_TXN_DATE     DATE,
    TOT_WOW_DOLLAR     DECIMAL(12, 2) NOT NULL,
    LMS_WOW_DOLLAR     DECIMAL(12, 2) NOT NULL,
    DATE_PROCESSED     DATE,
    LMS_FILE           VARCHAR(100),
    HANDBACK_FILE      VARCHAR(100),
    PRICE_COMP_FILE    VARCHAR(100),
    LMS_SENT_DATE      DATE,
    HANDBACK_SENT_DATE DATE,
    PRIMARY KEY (CRN, BASKET_KEY, START_TXN_DATE)
);

CREATE TABLE BM_LINE_ITEM_TRANSACTION_LOG (
    CRN            VARCHAR(20),
    BASKET_KEY     VARCHAR(42),
    START_TXN_DATE DATE,
    ARTICLE_NBR    VARCHAR(20)    NOT NULL,
    WOW_DOLLAR     DECIMAL(12, 2) NOT NULL,
    DATE_PROCESSED DATE,
    PRIMARY KEY (CRN, BASKET_KEY, START_TXN_DATE)
);

CREATE TABLE BM_ERROR_LOG (
    CRN            VARCHAR(20),
    BASKET_KEY     VARCHAR(42),
    HANDBACK_FILE  VARCHAR(100) NOT NULL,
    ERROR_CODE     SMALLINT     NOT NULL,
    ERROR_MESSAGE  VARCHAR(100) NOT NULL,
    DATE_PROCESSED DATE,
    PRIMARY KEY (CRN, BASKET_KEY)
);

CREATE TABLE BM_PRICE_GROUP_DATA (
    START_TXN_DATE  DATE,
    STORE_CODE      VARCHAR(20)  NOT NULL,
    ONLINE_PG_NAME  VARCHAR(100) NOT NULL,
    OFFLINE_PG_NAME VARCHAR(100) NOT NULL,
    PRIMARY KEY (START_TXN_DATE, STORE_CODE)
);

CREATE TABLE BM_ADMIN_PARAMS (
    PARAM_NAME  VARCHAR(40),
    PARAM_VALUE VARCHAR(40),
    START_DATE  DATE,
    END_DATE    DATE,
    PRIMARY KEY (PARAM_NAME, START_DATE)
);

/**
* This file holds the metadata information for Pricing file (Tab 1 in the attached document)
* For any given transaction date, the latest BM_PRICING_INPUT_FILE should be taken when the application is triggered from a new
* input transaction file. If the trigger is due to new pricing file, we just update the db with the metadata.
**/
CREATE TABLE BM_PRICE (
    BM_PRICING_INPUT_FILE VARCHAR(200), -- S3 location
    TRANSACTION_DATE      DATE, -- Transaction date (from the file name)
    PROCESSED_DATE        DATE, -- Date file arrived
    PRIMARY KEY (BM_PRICING_INPUT_FILE, TRANSACTION_DATE)
);